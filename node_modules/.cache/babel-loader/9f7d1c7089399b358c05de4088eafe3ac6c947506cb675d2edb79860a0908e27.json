{"ast":null,"code":"var _jsxFileName = \"/Users/vishwanandn/Desktop/Admin_Dashboard_React_syncfusion/src/components/Charts/Stacked.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, Category, StackingColumnSeries, Tooltip } from '@syncfusion/ej2-react-charts';\nimport { stackedCustomSeries, stackedPrimaryXAxis, stackedPrimaryYAxis } from '../../data/dummy';\nimport { useStateContext } from '../../contexts/ContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stacked = _ref => {\n  _s();\n  let {\n    width,\n    height\n  } = _ref;\n  const {\n    currentMode\n  } = useStateContext();\n  return /*#__PURE__*/_jsxDEV(ChartComponent, {\n    id: \"charts\",\n    primaryXAxis: stackedPrimaryXAxis,\n    primaryYAxis: stackedPrimaryYAxis,\n    width: width,\n    height: height,\n    chartArea: {\n      border: {\n        width: 0\n      }\n    },\n    tooltip: {\n      enable: true\n    },\n    background: currentMode === 'Dark' ? '#33373E' : '#fff',\n    legendSettings: {\n      background: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Inject, {\n      services: [StackingColumnSeries, Category, Legend, Tooltip]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SeriesCollectionDirective, {\n      children: stackedCustomSeries.map((item, index) => /*#__PURE__*/_jsxDEV(SeriesDirective, {\n        ...item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(Stacked, \"TC2qND29/IS1S3Fr7jSV7BVCnSg=\", false, function () {\n  return [useStateContext];\n});\n_c = Stacked;\nexport default Stacked;\nvar _c;\n$RefreshReg$(_c, \"Stacked\");","map":{"version":3,"names":["React","ChartComponent","SeriesCollectionDirective","SeriesDirective","Inject","Legend","Category","StackingColumnSeries","Tooltip","stackedCustomSeries","stackedPrimaryXAxis","stackedPrimaryYAxis","useStateContext","jsxDEV","_jsxDEV","Stacked","_ref","_s","width","height","currentMode","id","primaryXAxis","primaryYAxis","chartArea","border","tooltip","enable","background","legendSettings","children","services","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["/Users/vishwanandn/Desktop/Admin_Dashboard_React_syncfusion/src/components/Charts/Stacked.jsx"],"sourcesContent":["import React from 'react';\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, Category, StackingColumnSeries, Tooltip } from '@syncfusion/ej2-react-charts';\n\nimport { stackedCustomSeries, stackedPrimaryXAxis, stackedPrimaryYAxis } from '../../data/dummy';\nimport { useStateContext } from '../../contexts/ContextProvider';\n\nconst Stacked = ({ width, height }) => {\n  const { currentMode } = useStateContext();\n\n  return (\n    <ChartComponent\n      id=\"charts\"\n      primaryXAxis={stackedPrimaryXAxis}\n      primaryYAxis={stackedPrimaryYAxis}\n      width={width}\n      height={height}\n      chartArea={{ border: { width: 0 } }}\n      tooltip={{ enable: true }}\n      background={currentMode === 'Dark' ? '#33373E' : '#fff'}\n      legendSettings={{ background: 'white' }}\n    >\n      <Inject services={[StackingColumnSeries, Category, Legend, Tooltip]} />\n      <SeriesCollectionDirective>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        {stackedCustomSeries.map((item, index) => <SeriesDirective key={index} {...item} />)}\n      </SeriesCollectionDirective>\n    </ChartComponent>\n  );\n};\n\nexport default Stacked;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,yBAAyB,EAAEC,eAAe,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,oBAAoB,EAAEC,OAAO,QAAQ,8BAA8B;AAElK,SAASC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,QAAQ,kBAAkB;AAChG,SAASC,eAAe,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,OAAO,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAChC,MAAM;IAAEI;EAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EAEzC,oBACEE,OAAA,CAACb,cAAc;IACboB,EAAE,EAAC,QAAQ;IACXC,YAAY,EAAEZ,mBAAoB;IAClCa,YAAY,EAAEZ,mBAAoB;IAClCO,KAAK,EAAEA,KAAM;IACbC,MAAM,EAAEA,MAAO;IACfK,SAAS,EAAE;MAAEC,MAAM,EAAE;QAAEP,KAAK,EAAE;MAAE;IAAE,CAAE;IACpCQ,OAAO,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAE;IAC1BC,UAAU,EAAER,WAAW,KAAK,MAAM,GAAG,SAAS,GAAG,MAAO;IACxDS,cAAc,EAAE;MAAED,UAAU,EAAE;IAAQ,CAAE;IAAAE,QAAA,gBAExChB,OAAA,CAACV,MAAM;MAAC2B,QAAQ,EAAE,CAACxB,oBAAoB,EAAED,QAAQ,EAAED,MAAM,EAAEG,OAAO;IAAE;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvErB,OAAA,CAACZ,yBAAyB;MAAA4B,QAAA,EAEvBrB,mBAAmB,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKxB,OAAA,CAACX,eAAe;QAAA,GAAiBkC;MAAI,GAAfC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAErB,CAAC;AAAClB,EAAA,CAtBIF,OAAO;EAAA,QACaH,eAAe;AAAA;AAAA2B,EAAA,GADnCxB,OAAO;AAwBb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}