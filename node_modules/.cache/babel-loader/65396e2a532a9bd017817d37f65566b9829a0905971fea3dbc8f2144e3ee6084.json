{"ast":null,"code":"var _jsxFileName = \"/Users/vishwanandn/Desktop/Admin_Dashboard_React_syncfusion/src/contexts/ContextProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\nconst initialState = {\n  chat: false,\n  cart: false,\n  userProfile: false,\n  notification: false\n};\nexport const ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [screenSize, setScreenSize] = useState(undefined);\n  const [currentColor, setCurrentColor] = useState('#03C9D7');\n  const [currentMode, setCurrentMode] = useState('Light');\n  const [themeSettings, setThemeSettings] = useState(false);\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [isClicked, setIsClicked] = useState(initialState);\n  const setMode = e => {\n    setCurrentMode(e.target.value);\n    localStorage.setItem('themeMode', e.target.value);\n  };\n  const setColor = color => {\n    setCurrentColor(color);\n    localStorage.setItem('colorMode', color);\n  };\n  const handleClick = clicked => setIsClicked({\n    ...initialState,\n    [clicked]: true\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    _jsxDEV(StateContext.Provider, {\n      value: {\n        currentColor,\n        currentMode,\n        activeMenu,\n        screenSize,\n        setScreenSize,\n        handleClick,\n        isClicked,\n        initialState,\n        setIsClicked,\n        setActiveMenu,\n        setCurrentColor,\n        setCurrentMode,\n        setMode,\n        setColor,\n        themeSettings,\n        setThemeSettings\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(ContextProvider, \"YBYWAJXswshG7JQ6u8BT2/5qSXI=\");\n_c = ContextProvider;\nexport const useStateContext = () => {\n  _s2();\n  return useContext(StateContext);\n};\n_s2(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","StateContext","initialState","chat","cart","userProfile","notification","ContextProvider","_ref","_s","children","screenSize","setScreenSize","undefined","currentColor","setCurrentColor","currentMode","setCurrentMode","themeSettings","setThemeSettings","activeMenu","setActiveMenu","isClicked","setIsClicked","setMode","e","target","value","localStorage","setItem","setColor","color","handleClick","clicked","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStateContext","_s2","$RefreshReg$"],"sources":["/Users/vishwanandn/Desktop/Admin_Dashboard_React_syncfusion/src/contexts/ContextProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst StateContext = createContext();\n\nconst initialState = {\n  chat: false,\n  cart: false,\n  userProfile: false,\n  notification: false,\n};\n\nexport const ContextProvider = ({ children }) => {\n  const [screenSize, setScreenSize] = useState(undefined);\n  const [currentColor, setCurrentColor] = useState('#03C9D7');\n  const [currentMode, setCurrentMode] = useState('Light');\n  const [themeSettings, setThemeSettings] = useState(false);\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [isClicked, setIsClicked] = useState(initialState);\n\n  const setMode = (e) => {\n    setCurrentMode(e.target.value);\n    localStorage.setItem('themeMode', e.target.value);\n  };\n\n  const setColor = (color) => {\n    setCurrentColor(color);\n    localStorage.setItem('colorMode', color);\n  };\n\n  const handleClick = (clicked) => setIsClicked({ ...initialState, [clicked]: true });\n\n  return (\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    <StateContext.Provider value={{ currentColor, currentMode, activeMenu, screenSize, setScreenSize, handleClick, isClicked, initialState, setIsClicked, setActiveMenu, setCurrentColor, setCurrentMode, setMode, setColor, themeSettings, setThemeSettings }}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n\nexport const useStateContext = () => useContext(StateContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,MAAMM,YAAY,GAAG;EACnBC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAE,KAAK;EACXC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC1C,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACe,SAAS,CAAC;EACvD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,SAAS,CAAC;EAC3D,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EACvD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAACI,YAAY,CAAC;EAExD,MAAMsB,OAAO,GAAIC,CAAC,IAAK;IACrBR,cAAc,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnD,CAAC;EAED,MAAMG,QAAQ,GAAIC,KAAK,IAAK;IAC1BhB,eAAe,CAACgB,KAAK,CAAC;IACtBH,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEE,KAAK,CAAC;EAC1C,CAAC;EAED,MAAMC,WAAW,GAAIC,OAAO,IAAKV,YAAY,CAAC;IAAE,GAAGrB,YAAY;IAAE,CAAC+B,OAAO,GAAG;EAAK,CAAC,CAAC;EAEnF;IAAA;IACE;IACAjC,OAAA,CAACC,YAAY,CAACiC,QAAQ;MAACP,KAAK,EAAE;QAAEb,YAAY;QAAEE,WAAW;QAAEI,UAAU;QAAET,UAAU;QAAEC,aAAa;QAAEoB,WAAW;QAAEV,SAAS;QAAEpB,YAAY;QAAEqB,YAAY;QAAEF,aAAa;QAAEN,eAAe;QAAEE,cAAc;QAAEO,OAAO;QAAEM,QAAQ;QAAEZ,aAAa;QAAEC;MAAiB,CAAE;MAAAT,QAAA,EACxPA;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;AAE5B,CAAC;AAAC7B,EAAA,CA1BWF,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AA4B5B,OAAO,MAAMiC,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5C,UAAU,CAACI,YAAY,CAAC;AAAA;AAACwC,GAAA,CAAjDD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}